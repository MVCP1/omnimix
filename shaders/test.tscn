[gd_scene load_steps=16 format=2]

[ext_resource path="res://shaders/diffuse.tres" type="Shader" id=1]
[ext_resource path="res://shaders/force_field1.tres" type="Shader" id=2]
[ext_resource path="res://shaders/hexes.png" type="Texture" id=3]
[ext_resource path="res://shaders/force_field3.tres" type="Shader" id=4]

[sub_resource type="ProceduralSky" id=6]
radiance_size = 4
sky_top_color = Color( 0.492096, 0.704689, 0.976563, 1 )
sky_horizon_color = Color( 0.673141, 0.867417, 0.996094, 1 )
sky_curve = 0.25
ground_bottom_color = Color( 0.421875, 0.370441, 0.281799, 1 )
ground_horizon_color = Color( 0.972656, 0.930862, 0.805481, 1 )
ground_curve = 0.01
sun_energy = 16.0

[sub_resource type="Environment" id=7]
background_mode = 2
background_sky = SubResource( 6 )
ambient_light_color = Color( 0.480469, 0.480469, 0.480469, 1 )
fog_height_min = 0.0
fog_height_max = 100.0
ssao_blur = 1

[sub_resource type="PlaneMesh" id=8]
size = Vector2( 8, 8 )

[sub_resource type="ShaderMaterial" id=9]
shader = ExtResource( 1 )
shader_param/color = Color( 0.320313, 0.212805, 0.0275269, 1 )

[sub_resource type="SphereMesh" id=10]

[sub_resource type="ShaderMaterial" id=11]
shader = ExtResource( 2 )
shader_param/base_color = Color( 1, 0.398438, 0, 0.63102 )
shader_param/near_far = Vector2( 0.1, 100 )
shader_param/hexes_scale = 20.0
shader_param/hex_tex = ExtResource( 3 )

[sub_resource type="Shader" id=5]
code = "shader_type spatial;
render_mode blend_add, depth_draw_opaque, cull_disabled;

uniform vec4 base_color:hint_color;
uniform vec2 near_far=vec2(0.1,100.0);
uniform sampler2D hex_tex:hint_black;
uniform float hexes_scale:hint_range(1,100);

float linearize(float val) {
    val = 2.0 * val - 1.0;
    val = 2.0 * near_far[0] * near_far[1] / (near_far[1] + near_far[0] - val * (near_far[1] - near_far[0]));
    return val;
}

float tri_wave(float t, float offset, float y_offset) {
    return clamp(abs(fract(offset + t) * 2.0 - 1.0) + y_offset, 0, 1);
}

void fragment() {
    float zdepth = linearize(texture(DEPTH_TEXTURE, SCREEN_UV).r);
    float zpos = linearize(FRAGCOORD.z);
    float diff = zdepth - zpos;
    float intersect = 0.0;
    if (diff > 0.0) {
        intersect = 1.0 - smoothstep(0.0, (1.0/near_far[1])*10.0, diff);
    }

    float t = tri_wave(TIME * 0.5, UV.x, -0.75) * 4.0;
    
    float pole = (1.0 - UV.y-0.3) * 1.5;
    float rim = clamp(1.0 - abs(dot(NORMAL, VERTEX)*0.75), 0.0, 1.0);
    float glow = clamp(max(max(intersect, rim), pole), 0.0, 1.0);

    vec3 hexes = texture(hex_tex, UV*hexes_scale).rgb;
    hexes.r *= t;
    hexes.g *= clamp(rim, 0, 1) * (sin((TIME*2.0) + hexes.b * 4.0)+1.0);
    
    hexes = (hexes.r + hexes.g) * base_color.rgb * 2.0 ;
    vec3 glow_color = smoothstep(base_color.rgb, vec3(1), vec3(pow(glow, 8)));
    vec3 final_color = (base_color.rgb) + (glow_color.rgb * glow) + hexes;

    ALBEDO = final_color;
    ALPHA = base_color.a;
}"

[sub_resource type="ShaderMaterial" id=12]
shader = SubResource( 5 )
shader_param/base_color = Color( 0.0330963, 0.664656, 0.941406, 0.417137 )
shader_param/near_far = Vector2( 0.1, 100 )
shader_param/hexes_scale = 20.0
shader_param/hex_tex = ExtResource( 3 )

[sub_resource type="ShaderMaterial" id=13]
shader = ExtResource( 4 )
shader_param/base_color = Color( 0.710938, 0, 1, 0.224588 )
shader_param/near_far = Vector2( 0.1, 100 )
shader_param/hexes_scale = 20.0
shader_param/hex_tex = ExtResource( 3 )

[sub_resource type="CubeMesh" id=14]
size = Vector3( 0.5, 0.5, 2 )

[sub_resource type="ShaderMaterial" id=15]
shader = ExtResource( 1 )
shader_param/color = Color( 0.241886, 0.0608826, 0.273438, 1 )

[node name="test" type="Node"]

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 0.739348, 0.521378, -0.426062, 0, 0.632775, 0.774336, 0.673323, -0.572504, 0.467841, 0, 11.6292, 0 )
shadow_bias = 1.0
directional_shadow_normal_bias = 0.2

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 0.819146, 0.573586, 0, -0.573586, 0.819146, 0, 1.96632, 4.36629 )
environment = SubResource( 7 )
fov = 65.0
near = 0.1

[node name="floor" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1.01966 )
mesh = SubResource( 8 )
material/0 = SubResource( 9 )

[node name="forcefield1" type="MeshInstance" parent="."]
mesh = SubResource( 10 )
material/0 = SubResource( 11 )

[node name="forcefield2" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -1, 0, 2 )
mesh = SubResource( 10 )
material/0 = SubResource( 12 )

[node name="forcefield3" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 2 )
mesh = SubResource( 10 )
material/0 = SubResource( 13 )

[node name="cube" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1.56247 )
mesh = SubResource( 14 )
material/0 = SubResource( 15 )
